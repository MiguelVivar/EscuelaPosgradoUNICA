package com.escuelaposgrado.Matricula.config;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

/**
 * Configuraci√≥n de Swagger/OpenAPI para el microservicio de Matr√≠cula
 */
@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("üìö Microservicio de Matr√≠cula - Escuela de Posgrado UNICA")
                        .description("""
                            **Sistema de Gesti√≥n de Matr√≠cula para la Escuela de Posgrado**
                            
                            Este microservicio gestiona todos los aspectos relacionados con la matr√≠cula acad√©mica:
                            
                            ## üéØ Funcionalidades Principales:
                            - **Per√≠odos Acad√©micos**: Gesti√≥n de per√≠odos y habilitaci√≥n para matr√≠cula
                            - **Sedes y Aulas**: Administraci√≥n de infraestructura educativa
                            - **Facultades**: Gesti√≥n de facultades y sus programas
                            - **Programas de Estudio**: Administraci√≥n de programas acad√©micos
                            - **Menciones**: Gesti√≥n de menciones por programa
                            - **Tasas de Pago**: Configuraci√≥n de costos por programa
                            - **Comisiones**: Registro de comisiones de unidades de posgrado
                            - **Turnos de Matr√≠cula**: Definici√≥n de calendarios de matr√≠cula
                            
                            ## üîê Autenticaci√≥n:
                            - Tokens JWT del microservicio de autenticaci√≥n
                            - Roles: ADMIN, COORDINADOR
                            
                            ## üìã Versi√≥n: 1.0.0
                            """)
                        .version("1.0.0")
                        .contact(new Contact()
                                .name("Equipo de Desarrollo UNICA")
                                .email("soporte@unica.edu.pe")
                                .url("https://www.unica.edu.pe"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .servers(List.of(
                        new Server()
                                .url("http://localhost:8082")
                                .description("üõ†Ô∏è Servidor de Desarrollo"),
                        new Server()
                                .url("https://api.posgrado.unica.edu.pe")
                                .description("üöÄ Servidor de Producci√≥n")))
                .addSecurityItem(new SecurityRequirement().addList("Bearer Authentication"))
                .components(new Components()
                        .addSecuritySchemes("Bearer Authentication",
                                new SecurityScheme()
                                        .type(SecurityScheme.Type.HTTP)
                                        .scheme("bearer")
                                        .bearerFormat("JWT")
                                        .description("Ingrese el token JWT en el formato: Bearer {token}")));
    }
}
