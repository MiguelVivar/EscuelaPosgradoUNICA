services:  
  # Microservicio de Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      autenticacion:
        condition: service_healthy
      intranet:
        condition: service_healthy
      matricula:
        condition: service_healthy
    networks:
      - escuela-network
    restart: unless-stopped

  # Microservicio de Autenticación
  autenticacion:
    build: ./backend/Autenticacion
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/autenticacion
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - escuela-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Microservicio de Intranet
  intranet:
    build: ./backend/Intranet
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/intranet
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - escuela-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Microservicio de Matrícula
  matricula:
    build: ./backend/Matricula
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/matricula
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - escuela-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Servicio de Base de Datos
  db:
    image: postgres:17.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - escuela-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Servicio de pgAdmin para administrar las bases de datos
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@unica.edu.pe
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8079:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - escuela-network

volumes:
  pgdata:
  pgadmin-data:

networks:
  escuela-network:
    driver: bridge
